searchData={"items":[{"type":"module","title":"Block","doc":"Módulo que define la estructura y funcionalidades para trabajar con bloques de una blockchain.\n\nUn bloque contiene:\n- `data`: los datos asociados a la transacción.\n- `timestamp`: fecha y hora de la creación del bloque.\n- `prev_hash`: hash del bloque anterior en la cadena.\n- `hash`: el hash único generado para este bloque.","ref":"Block.html"},{"type":"function","title":"Block.new/2","doc":"Crea un nuevo bloque con el dato que recibe y el hash del bloque antecesor","ref":"Block.html#new/2"},{"type":"function","title":"Block.valid?/1","doc":"Valida un bloque individualmente.\n\nVerifica que el hash almacenado en el bloque coincida con el hash calculado a partir de sus datos.","ref":"Block.html#valid?/1"},{"type":"function","title":"Block.valid?/2","doc":"Valida si dos bloques secuenciales son válidos.\n\nValida que el `prev_hash` del segundo bloque coincida con el `hash` del primer bloque y que el orden temporal entre los bloques sea correcto.","ref":"Block.html#valid?/2"},{"type":"module","title":"Blockchain","doc":"Módulo que realiza operaciones sobre una blockchain.\n\nUna **blockchain** es una lista de bloques interconectados.","ref":"Blockchain.html"},{"type":"function","title":"Blockchain.insert/2","doc":"Inserta un nuevo bloque en la blockchain.\n\nVerifica que el bloque anterior es válido en relación con el nuevo bloque.\n- Si la validación es exitosa, el nuevo bloque se añade.\n- En otro caso el bloque se descarta.","ref":"Blockchain.html#insert/2"},{"type":"function","title":"Blockchain.new/0","doc":"Crea una nueva blockchain con un bloque génesis.","ref":"Blockchain.html#new/0"},{"type":"function","title":"Blockchain.new_genesis_block/0","doc":"Crea el bloque génesis de la blockchain.","ref":"Blockchain.html#new_genesis_block/0"},{"type":"function","title":"Blockchain.valid?/1","doc":"Valida la blockchain completa.\n\nSe comprueba que:\n- El hash de cada bloque coincida con el valor calculado para ese bloque.\n- El `prev_hash` de cada bloque coincida con el `hash` del bloque anterior.\n- Los bloques esten ordenados cronológicamente).","ref":"Blockchain.html#valid?/1"},{"type":"module","title":"Crypto","doc":"Módulo que asegura la integridad de los bloques utilizando funciones de hashing criptográfico.","ref":"Crypto.html"},{"type":"function","title":"Crypto.hash/1","doc":"Calcula el hash de un bloque.","ref":"Crypto.html#hash/1"},{"type":"function","title":"Parámetros: - Crypto.hash/1","doc":"- `block`: El bloque a calcular su hash","ref":"Crypto.html#hash/1-par%C3%A1metros"},{"type":"function","title":"Retorna: - Crypto.hash/1","doc":"Una cadena que es el hash del bloque.","ref":"Crypto.html#hash/1-retorna"},{"type":"function","title":"Crypto.put_hash/1","doc":"Calcula e inserta el hash en el bloque","ref":"Crypto.html#put_hash/1"},{"type":"function","title":"Parámetros: - Crypto.put_hash/1","doc":"- `block`: Un bloque.","ref":"Crypto.html#put_hash/1-par%C3%A1metros"},{"type":"function","title":"Retorna: - Crypto.put_hash/1","doc":"El bloque con el campo `:hash` añadido.","ref":"Crypto.html#put_hash/1-retorna"},{"type":"module","title":"Grafica","doc":"Módulo de una red distribuida que implementa el consenso para insertar un nuevo bloque a la blockchain.","ref":"Grafica.html"},{"type":"function","title":"Grafica.inicia/1","doc":"Inicializa un nodo con el estado inicial especificado.\n\n El estado inicial incluye:\n- `:vecinos`: lista de otros nodos con los que se comunica.\n- `:blockchain`: blockchain actual del nodo.\n- `:bizantino`: indica si en un nodo malicioso o no.\n- `:mensajes`: mensajes recibidos por el nodo.","ref":"Grafica.html#inicia/1"},{"type":"function","title":"Grafica.procesa_mensaje/2","doc":"Procesa diferentes tipos de mensajes y actualiza el estado en consecuencia.","ref":"Grafica.html#procesa_mensaje/2"},{"type":"function","title":"Parámetros - Grafica.procesa_mensaje/2","doc":"- `mensaje`: Una tupla que representa el mensaje a procesar. Puede ser uno de los siguientes:\n    - `{:commit, bloque, nodo_id}`: Indica que un nodo ha confirmado un bloque.\n    - `{:preprepare, bloque, _lider_id}`: Indica que el líder ha enviado un bloque para pre-preparación.\n    - `{:bloque, bloque}`: Indica que se ha recibido un nuevo bloque.\n    - `{:vecinos, vecinos}`: Indica que se ha recibido una lista de vecinos.\n    - `{:estado, _}`: Indica que se ha recibido una solicitud de estado.\n\n  - `estado`: El estado actual del sistema.","ref":"Grafica.html#procesa_mensaje/2-par%C3%A1metros"},{"type":"function","title":"Retorno - Grafica.procesa_mensaje/2","doc":"- El nuevo estado del sistema después de procesar el mensaje.","ref":"Grafica.html#procesa_mensaje/2-retorno"},{"type":"function","title":"Grafica.recibe_mensaje/1","doc":"Recibe y procesa mensajes, actualizando el estado del nodo.","ref":"Grafica.html#recibe_mensaje/1"},{"type":"module","title":"Main","doc":"Módulo principal que maneja la creación de una red de nodos utilizando el modelo Watts y Strogatz. Incluye procesos honestos y bizantinos.\nSimula la blockchain distribuida con nodos que participan en el consenso a través de un algoritmo basado en Practical Byzantine Fault Tolerance.","ref":"Main.html"},{"type":"function","title":"Main.run/2","doc":"Función principal que inicializa la red de `n` nodos y `f` procesos bizantinos.\n\nAdemás simula el consenso enviando bloques válidos e inválidos a través de la red.","ref":"Main.html#run/2"},{"type":"function","title":"Parámetros: - Main.run/2","doc":"- `n`: El número total de nodos en la red.\n- `f`: El número de nodos bizantinos en la red.","ref":"Main.html#run/2-par%C3%A1metros"},{"type":"function","title":"Retorna: - Main.run/2","doc":"La lista de los procesos para permitir la interacción manual.","ref":"Main.html#run/2-retorna"},{"type":"module","title":"NodoBizantino","doc":"Módulo de nodo bizantino que simula un proceso malicioso en la red.","ref":"NodoBizantino.html"},{"type":"function","title":"NodoBizantino.inicia/0","doc":"Inicia un nodo bizantino con el estado inicial especificado.","ref":"NodoBizantino.html#inicia/0"},{"type":"module","title":"NodoHonesto","doc":"Módulo de nodo honesto que simula un proceso no malicioso en la red.","ref":"NodoHonesto.html"},{"type":"function","title":"NodoHonesto.inicia/0","doc":"Inicia un nodo honesto con el estado inicial especificado.","ref":"NodoHonesto.html#inicia/0"},{"type":"module","title":"Src","doc":"Documentation for `Src`.","ref":"Src.html"},{"type":"function","title":"Src.hello/0","doc":"Hello world.","ref":"Src.html#hello/0"},{"type":"function","title":"Examples - Src.hello/0","doc":"iex> Src.hello()\n    :world","ref":"Src.html#hello/0-examples"}],"proglang":"elixir","content_type":"text/markdown","producer":{"name":"ex_doc","version":"0.35.1"}}